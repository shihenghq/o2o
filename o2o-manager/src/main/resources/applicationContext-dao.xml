<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

  <!-- 扫描service、dao -->
  <context:component-scan base-package="com.o2o.manager">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>

  <!-- 引入数据库配置文件 -->
  <context:property-placeholder location="classpath:db.properties"/>

  <!-- 配置 数据源 -->
  <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
    <property name="initialSize" value="5" />
    <property name="maxActive" value="100" />
    <property name="minIdle" value="10" />
    <property name="maxWait" value="60000" />
    <property name="validationQuery" value="SELECT 'x'" />
    <property name="testOnBorrow" value="true" />
    <property name="testOnReturn" value="true" />
    <property name="testWhileIdle" value="true" />
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <property name="minEvictableIdleTimeMillis" value="300000" />
    <property name="removeAbandoned" value="true" />
    <property name="removeAbandonedTimeout" value="1800" />
    <property name="logAbandoned" value="true" />
    <property name="filters" value="mergeStat" />
  </bean>

  <!-- 主库 -->
  <bean name="master-dataSource" parent="dataSource" init-method="init">
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>

  <!-- 从库 -->
  <bean name="slave-dataSource" parent="dataSource" init-method="init">
    <property name="url" value="${slave.jdbc.url}" />
    <property name="username" value="${slave.jdbc.username}" />
    <property name="password" value="${slave.jdbc.password}" />
  </bean>

  <!--主从库选择-->
  <bean id="dynamicDataSource" class="com.o2o.manager.datasource.DynamicDataSource">
    <property name="master" ref="master-dataSource"/>
    <property name="slaves">
      <list>
        <ref bean="slave-dataSource"/>
      </list>
    </property>
  </bean>

  <!-- 配置 SqlSessionFactory -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 加载mybatis的配置文件 -->
    <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
    <!-- 加载数据源 -->
    <property name="dataSource" ref="dynamicDataSource"/>
  </bean>

  <!-- MyBatis 动态实现  -->
  <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!-- 对Dao 接口动态实现，需要知道接口在哪  -->
    <property name="basePackage" value="com.o2o.manager.mapper"/>
  </bean>

  <!-- 事务管理 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dynamicDataSource"></property>
  </bean>

  <context:component-scan base-package="com.o2o">
    <context:include-filter type="annotation" expression="com.o2o.iteam.annotation.Module" />
    <context:include-filter type="annotation" expression="com.o2o.iteam.annotation.Operation" />

    <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

  </context:component-scan>

</beans>
